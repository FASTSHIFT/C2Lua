#include "C2Lua.h"

String FileString;

String KeywordFilter[] = {
	"//",
	"/*",
	"#",
	"\n",
	"typedef",
	"struct",
	"enum",
	"extern"
};

bool CheckLineKeyword(String line)
{
	bool retval = false;
	for(int i = 0; i < __Sizeof(KeywordFilter); i++)
	{
		if(line.startsWith(KeywordFilter[i]))
		{
			retval = true;
			break;
		}
	}
	return retval;
}

String GetNextLine()
{
	String newLine = "";
	int index = FileString.indexOf('\n');
	if(index >= 0)
	{
		newLine = FileString.substring(0, index + 1);
		FileString = FileString.substring(index + 1);
	}
	return newLine;
}

void FuncSeparation(FILE* fp)
{
	String newLine;
	int line = 0;
	if(fp)
		fprintf(fp, "/*These codes are automatically generated by C2Lua(%s)*/\n",__DATE__);
	while((newLine = GetNextLine()) != "")
	{
		printf("Line %d: %s", line, newLine.c_str());
		if(CheckLineKeyword(newLine))
		{
			printf("^ useless line\r\n");
		}
		else
		{
			toLua(newLine.c_str(), fp);
		}
		line++;
	}
}

bool LoadHeadFile(String inputPath, String outputPath)
{
	PRINT_FUNC_NAME();
	bool retval = false;
	FileString = "";
	printf("inputPath name:%s\r\n", inputPath.c_str());
	printf("outputPath name:%s\r\n", outputPath.c_str());

	FILE* fpw = fopen(outputPath.c_str(), "wt");
	if(fpw)
	{
		printf("file %s is created\r\n",outputPath.c_str());
	}
	else
	{
		printf("open error!\r\n");
	}

	FILE* fpr = fopen(inputPath.c_str(), "rt");
	if(fpr)
	{
		printf("file %s is opened\r\n",inputPath.c_str());
		char ch;
		while((ch = fgetc(fpr)) != EOF)
		{
			FileString += ch;
		}
		//FileString.replace("\n","-n\n");
		printf("\r\n---------file text--------\r\n%s\r\n", FileString.c_str());
		retval = true;
		FuncSeparation(fpw);
	}
	else
	{
		printf("open error!\r\n");
	}

	if(fpr)fclose(fpr);
	if(fpw)fclose(fpw);
	printf("C2Lua finished\r\n");

	return retval;
}
